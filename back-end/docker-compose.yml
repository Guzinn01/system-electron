# Versão do Docker Compose
version: "3.8"

# Definição dos serviços (contêineres)
services:
  # Serviço do Banco de Dados MySQL
  db:
    image: mysql:8.0
    container_name: mysql_db_service
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: system_electron
    ports:
      # Expõe a porta 3306 do contêiner na porta 3307 da sua máquina
      - "3307:3306"
    volumes:
      # Este volume garante que os dados do seu banco não sejam perdidos
      - mysql_data:/var/lib/mysql
    networks:
      - app_network
    # Healthcheck para garantir que os outros serviços esperem o DB estar pronto
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-u",
          "root",
          "-p'root'",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Serviço da API em Python
  python_api:
    build: ./analise_lances
    container_name: python_api_service
    restart: always
    env_file:
      - ./analise_lances/.env-example
    ports:
      - "8000:8000"
    depends_on:
      db:
        # Espera o banco de dados estar "saudável" antes de iniciar
        condition: service_healthy
    networks:
      - app_network
    volumes:
      - ./analise_lances:/code

  # Serviço do Backend em Node.js
  nodejs_backend:
    build: ./system_backend
    container_name: nodejs_gateway_service
    restart: always
    env_file:
      - ./system_backend/.env-example
    ports:
      - "3000:3000"
    depends_on:
      db:
        # Espera o banco de dados estar "saudável"
        condition: service_healthy
      python_api:
        # Espera o serviço Python iniciar
        condition: service_started
    networks:
      - app_network
    # O volume abaixo é útil para desenvolvimento
    volumes:
      - ./system_backend:/usr/src/app

# Define a rede compartilhada para que os serviços possam se comunicar pelo nome
networks:
  app_network:
    driver: bridge

# Define o volume nomeado para persistir os dados do MySQL
volumes:
  mysql_data:
